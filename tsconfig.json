{
  "compilerOptions": {
    "strict": true,                                         // Enable all strict type-checking options.
    "strictNullChecks": true,                               // When strictNullChecks is false, null and undefined are effectively ignored by the language.
    "noEmit": true,                                         // Do not emit compiler output files like JavaScript source code, source-maps or declarations.
    "esModuleInterop": true,                                // Import CommonJS modules in compliance with es6 modules spec.
    "isolatedModules": true,                                // Tells TypeScript to warn you if you write certain code that canâ€™t be correctly interpreted by a single-file transpilation process.
    "emitDecoratorMetadata": true,                          // Enables experimental support for emitting type metadata for decorators which works with the module reflect-metadata.
		"experimentalDecorators": true,                         // Enables experimental support for decorators, which is a version of decorators that predates the TC39 standardization process.
    "target": "esnext",                                     // Changes which JS features are downleveled and which are left intact, also changes the default value of lib. esnext value refers to the highest version your version of TypeScript supports.
    "lib": ["dom", "dom.iterable", "esnext"],               // Specifies a set of built-in API declaration groups that should be included in the compilation.
    "jsx": "preserve",                                      // Controls how JSX constructs are emitted in JavaScript files. This only affects output of JS files that started in .tsx files.
    "allowJs": true,                                        // Allow JavaScript files to be imported inside your project, instead of just .ts and .tsx files.
    "skipLibCheck": true,                                   // Skip type checking of declaration files.
    "incremental": true,                                    // Tells TypeScript to save information about the project graph from the last compilation to files stored on disk. This creates a series of .tsbuildinfo files in the same folder as your compilation output.
    "plugins": [                                            // List of language service plugins to run inside the editor.
      { "name": "next" }
    ],
    "baseUrl": ".",                                         // Sets a base directory from which to resolve bare specifier module names.
    "types": ["node", "jest", "@testing-library/jest-dom"], // If types is specified, only packages listed will be included in the global scope.
    "module": "esnext",                                     // Sets the module system for the program.
    "moduleResolution": "bundler",                          // Specify the module resolution strategy
    "resolveJsonModule": true,                              // Allows importing modules with a .json extension. This includes generating a type for the import based on the static JSON shape.
    "paths": {                                              // paths lets you declare how TypeScript should resolve an import in your require/imports.
      "@/*": ["./*"],
      "@tldraw/*": ["packages/tldraw/packages/*"],
      "react": ["./node_modules/@types/react"],
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts", "jest.config.js"],
  "exclude": ["node_modules", "packages"]
}
